# カレントをC直下に
setwd("c:/")
# TokyoSTAT.csvの読み込み
DFCity <- read.table("data/TokyoSTAT.csv", sep=",", header=TRUE, stringsAsFactors = FALSE, na.strings = "", fill=TRUE)
View(DFCity)
# 8列目までを分析対象とする
DFCity <- DFCity[,1:8]
# 文字化けを防ぐためカラム名変更
colnames(DFCity) <- c("市町村","行政CD","世帯あたり人数","Under15Ratio","Over65Ratio", "転入者_対人口比", "転出者_対人口比", "DayPopulationRatio")
# 散布図で各変数間の関係を確認
pairs(DFCity[,-c(1:2)])
# 相関行列をオブジェクトに格納
COR <- cor(DFCity[,-c(1:2)])
library(qgraph)
qgraph(COR,minimum=.20,edge.labels=T,label.scale=F,label.cex=0.8,edge.label.cex=1.4)
# 平行分析で因子数を見積もる
library(psych)
fa.parallel(DFCity[,-c(1:2)])
result.fa <- fa(DFCity[,-c(1:2)],nfactors=3,fm="ml",rotate="varimax")
print(result.fa, digits = 2, sort = TRUE)
fa.diagram(result.fa)
# 因子得点の確認
head(result.fa$scores)
as.data.frame(result.fa$scores)
# 因子得点をデータフレームに変換
DFfa <- as.data.frame(result.fa$scores)
# DFfaの確認
View(DFfa)
rownames(DFfa) <- DFCity$市町村
rownames(DFfa)
View(DFfa)
# 因子負荷量
plot(DFfa[, 1], DFfa[, 2], type="n")
text(DFfa[, 1], DFfa[, 2], rownames(DFfa))
plot(DFfa[, 1], DFfa[, 2], type="n")
text(DFfa[, 1], DFfa[, 2], rownames(DFfa))
plot(DFfa[, 1], DFfa[, 3], type="n")
text(DFfa[, 1], DFfa[, 3], rownames(DFfa))
# 行の名前を変換
names(DFfa) = c("郊外生活度","経済活性度","高齢化度")
# クラスタリングを行う
num.km <- kmeans(DFfa, 3, iter.max = 10)
# クラスタごとの数を確認
table(num.km$cluster)
# 色ラベルの配列を作るためにクラスタ番号の配列をコピー
color.km <- num.km$cluster
# factor(カテゴリ変数)に変換。カテゴリ変数にはlevelがある
color.km <- as.factor(color.km)
# levelに色をつける
levels(color.km) <- c("blue", "red", "green")
color.km
# factorの実体は整数型なので文字列に変換
color.km <- as.character(color.km)
# 色分けして因子得点をプロット
plot(DFfa[, 1], DFfa[, 2], type="n", xlab="郊外生活度", ylab="経済活性度")
text(DFfa[, 1], DFfa[, 2], rownames(DFfa), col=color.km)
plot(DFfa[, 1], DFfa[, 3], type="n", xlab="郊外生活度", ylab="高齢化度")
text(DFfa[, 1], DFfa[, 3], rownames(DFfa), col=color.km)
plot(DFfa[, 2], DFfa[, 3], type="n", xlab="経済活性度", ylab="高齢化度")
text(DFfa[, 2], DFfa[, 3], rownames(DFfa), col=color.km)
# 元のデータに因子得点とクラスタ番号を付加
DFCity <- cbind(DFCity, num.km$cluster)
View(DFCity)
# 最後の列名の名前変更
colnames(DFCity)[ncol(DFCity)] <- "clusterNo"
View(DFCity)
# マンション取引価格データの読み込み
load("data/DFProperty")
View(DFProperty)
# 駅別乗降客数データの読み込み
DFStation <- read.table("data/TokyoStation.csv", sep=",", header = TRUE, stringsAsFactors = FALSE, na.strings = "", quote = "\"", fill = TRUE, fileEncoding = "UTF-8")
# マンション取引価格データにマージキーの作成
DFProperty$Station <- DFProperty$最寄駅
# マンション取引価格データと駅別乗降客数のマージ
DFPSt <- merge(DFProperty, DFStation, by="Station")
View(DFPSt)
# マージキーの削除
DFPSt <- DFPSt[,-1]
# マンション取引価格データにGYOSEIをマージキーとして作成
DFPSt$GYOSEI <- DFPSt$市区町村CD
View(DFPSt)
# 市区町村データにGYOSEIをマージキーとして追加
DFCity$GYOSEI <- DFCity$行政CD
View(DFCity)
# 駅別乗降客数と市区町村データをマージ
DFAll <- merge(DFPSt, DFCity, by="GYOSEI")
# マージキーの削除
DFAll <- DFAll[,-1]
# 取引価格の分布を確認
hist(DFAll$取引価格,breaks=100, main="取引価格の分布")
# 分布が低価格帯に偏っているためlogをとる
hist(log10(DFAll$取引価格),breaks=100, main="取引価格の分布")
# 面積と取引価格の散布図
plot(DFAll$面積m2, DFAll$取引価格)
# グラフィカルな散布図
library(ggplot2)
ggplot(DFAll, aes(x = 面積m2, y = 取引価格)) + geom_point(aes(colour=建築年), alpha=0.7) + labs(colour="建築年") + ggtitle("面積と価格")
# logをとる
ggplot(DFAll, aes(x = log10(面積m2), y = log10(取引価格))) + geom_point(aes(colour=建築年), alpha=0.7) + labs(colour="建築年") + ggtitle("面積と価格")
# 取引物件の築年数のヒストグラム
DFAll$築年数 <- DFAll$取引年 - DFAll$建築年
hist(DFAll$築年数, breaks=100, main="取引物件の築年数", xlab="築年数")
ggplot(DFAll, aes(x = 築年数, y = 取引価格)) + geom_point(aes(colour=面積m2), alpha=0.7) + ggtitle("築年数と価格") + theme(plot.title = element_text(hjust = 0.5))
ggplot(DFAll, aes(x = log10(築年数), y = log10(取引価格))) + geom_point(aes(colour=面積m2), alpha=0.7) + ggtitle("築年数と価格") + theme(plot.title = element_text(hjust = 0.5))
# 面積単価を求める
DFAll$面積単価 <- DFAll$取引価格/DFAll$面積m2
ggplot(DFAll, aes(x = Longit, y = Latit)) + geom_point(aes(colour=as.factor(clusterNo), size=面積単価), alpha=0.7) + ggtitle("緯度・経度によるプロット") + xlab("経度") + ylab("緯度") + theme(plot.title = element_text(hjust = 0.5))
# 緯度・経度によるプロット
ggplot(DFAll, aes(x = Longit, y = Latit)) + geom_point(aes(colour=取引価格, size=面積単価), alpha=0.7) + ggtitle("緯度・経度によるプロット") + xlab("経度") + ylab("緯度") + theme(plot.title = element_text(hjust = 0.5))
# 市区町村クラスタごとの面積単価
boxplot(log10(DFAll$面積単価) ~ DFAll$clusterNo, main="市区町村クラスタごとの面積単価(対数)")
# 間取りを文字列化
DFAll$間取り <- as.character(DFAll$間取り)
boxplot(log10(DFAll$面積単価) ~ DFAll$間取り, main="間取り別の面積単価(対数)")
boxplot(log10(DFAll$面積単価) ~ DFAll$RailCo, main="鉄道会社別の面積単価(対数)", xlab="", las=2)